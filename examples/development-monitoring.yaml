# Development Environment Monitoring Hook
# This example provides lightweight monitoring for development environments
# with helpful debugging tips and learning opportunities.

apiVersion: kagent.dev/v1alpha2
kind: Hook
metadata:
  name: dev-monitoring
  namespace: development
  labels:
    environment: development
    monitoring-type: educational
spec:
  eventConfigurations:
  # Development-friendly pod restart monitoring
  - eventType: pod-restart
    agentRef:
      name: dev-helper
      namespace: kagent
    prompt: |
      AUTONOMOUS MODE: DEV ENV - Pod {{.ResourceName}} restarted at {{.EventTime}}. Debug and fix immediately.

      INSTRUCTIONS:
      • Use all available tools to diagnose and resolve the issue
      • Check code changes, logs, resource limits, and configuration
      • Focus on common dev issues: crashes, env vars, DB connections, resource limits
      • Annotate fixed resources with: kagentFix=<timestamp>
      • If patching fails: delete and recreate resources
      • Never ask for permission - assume autonomous execution
      • Complete remediation without human approval

  # OOM kills in development
  - eventType: oom-kill
    agentRef:
      name: dev-helper
      namespace: kagent
    prompt: |
      AUTONOMOUS MODE: DEV ENV - OOM kill for {{.ResourceName}} at {{.EventTime}}. Optimize memory immediately.

      INSTRUCTIONS:
      • Use all available tools to diagnose and resolve memory issues
      • Increase memory limits, profile usage, check for leaks in recent changes
      • Annotate fixed resources with: kagentFix=<timestamp>
      • If patching fails: delete and recreate resources
      • Never ask for permission - assume autonomous execution
      • Complete remediation without human approval