# Performance and Resource Monitoring Hook
# This example focuses on performance optimization and resource management
# with detailed analysis and recommendations.

apiVersion: kagent.dev/v1alpha2
kind: Hook
metadata:
  name: performance-monitoring
  namespace: performance
  labels:
    monitoring-type: performance
    focus: optimization
spec:
  eventConfigurations:
  # Monitor OOM kills for performance optimization
  - eventType: oom-kill
    agentRef:
      name: performance-optimizer
      namespace: kagent
    prompt: |
      AUTONOMOUS MODE: PERFORMANCE ALERT - OOM kill for {{.ResourceName}} at {{.EventTime}}. Optimize immediately.

      INSTRUCTIONS:
      • Use all available tools to analyze memory usage and patterns
      • Identify memory leaks, inefficient algorithms, and resource optimization
      • Right-size memory limits and implement performance improvements
      • Annotate fixed resources with: kagentFix=<timestamp>
      • If patching fails: delete and recreate resources
      • Never ask for permission - assume autonomous execution
      • Complete remediation without human approval

  # Monitor pod pending for resource allocation issues
  - eventType: pod-pending
    agentRef:
      name: capacity-planner
      namespace: kagent
    prompt: |
      AUTONOMOUS MODE: CAPACITY ALERT - Pod {{.ResourceName}} pending since {{.EventTime}}. Resolve scheduling issue.

      INSTRUCTIONS:
      • Use all available tools to analyze resource availability and constraints
      • Check node selectors, affinities, taints, and resource requests
      • Implement immediate scaling and optimization strategies
      • Annotate fixed resources with: kagentFix=<timestamp>
      • If patching fails: delete and recreate resources
      • Never ask for permission - assume autonomous execution
      • Complete remediation without human approval

  # Monitor restarts for performance degradation patterns
  - eventType: pod-restart
    agentRef:
      name: reliability-engineer
      namespace: kagent
    prompt: |
      AUTONOMOUS MODE: RELIABILITY ALERT - Pod {{.ResourceName}} restarted at {{.EventTime}}. Performance analysis required.

      INSTRUCTIONS:
      • Use all available tools to analyze restart patterns and performance degradation
      • Investigate root causes, bottlenecks, and reliability improvements
      • Implement optimization and preventive measures immediately
      • Annotate fixed resources with: kagentFix=<timestamp>
      • If patching fails: delete and recreate resources
      • Never ask for permission - assume autonomous execution
      • Complete remediation without human approval