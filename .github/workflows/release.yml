name: Release

on:
  push:
    tags:
    - "v*.*.*"

env:
  # Cache key components for better organization
  CACHE_KEY_PREFIX: kagent-v2
  BRANCH_CACHE_KEY: ${{ github.head_ref || github.ref_name }}
  # Consistent builder configuration
  BUILDX_BUILDER_NAME: kagent-builder-v0.23.0
  BUILDX_VERSION: v0.23.0
  DOCKER_REGISTRY: ghcr.io
  DOCKER_REPO: kagent-dev/khook

jobs:
  push-images:
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/amd64,linux/arm64
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        name: ${{ env.BUILDX_BUILDER_NAME }}
        version: ${{ env.BUILDX_VERSION }}
        platforms: linux/amd64,linux/arm64
        use: 'true'
        driver-opts: network=host

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Docker image
      env:
        DOCKER_BUILD_ARGS: --push --platform linux/amd64,linux/arm64
      run: make docker-build

  push-helm-chart:
    needs:
    - push-images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Helm chart
      run: make helm-publish

  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate release manifests
      run: |
        mkdir -p release
        # Generate install manifest
        cat > release/install.yaml << EOF
        # KHook Controller Installation Manifest
        # Version: ${{ steps.tag.outputs.tag }}
        ---
        EOF
        cat config/crd/bases/kagent.dev_hooks.yaml >> release/install.yaml
        echo "---" >> release/install.yaml
        # Add RBAC and deployment manifests here when they exist
        
        # Generate CRD-only manifest
        cp config/crd/bases/kagent.dev_hooks.yaml release/crds.yaml

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Release ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |          
          ## Installation
          
          ```bash
          helm install khook-crds oci://ghcr.io/kagent-dev/khook/helm/khook-crds \
              --namespace kagent \
              --create-namespace
          helm install khook oci://ghcr.io/kagent-dev/khook/helm/khook \
              --namespace kagent \
              --create-namespace
          ```
          
          ## What's Changed
          
          See the full changelog below.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}